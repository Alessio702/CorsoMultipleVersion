package com.example.demo.controller;

import java.util.List;

import javax.validation.Valid;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.servlet.ModelAndView;

import com.example.demo.model.Aula;
import com.example.demo.service.AulaService;

@Controller
@RequestMapping(value = "/Aula")
public class AulaController {

	@Autowired
	AulaService aulaservice;

	@GetMapping(value = "/ListaAule")
	public ModelAndView listaaule() {
		ModelAndView model = new ModelAndView("ListaAule");

		List<Aula> listeaule = aulaservice.getAllAule();
		model.addObject("elencoAule", listeaule);
		return model;
	}

	@GetMapping(value = "/AddAula")
	public ModelAndView addAula() {
		ModelAndView model = new ModelAndView();
		Aula oaula = new Aula();
		model.addObject("oggettoAula", oaula);
		model.setViewName("Aula/AddEditAula");
		return model;
	}

	@GetMapping(value = "/EditAula/{id}")
	public ModelAndView editAula(@PathVariable Integer id) {
		ModelAndView model = new ModelAndView();
		if(aulaservice.getAulaById(789) != null) {
			Aula oaula = aulaservice.getAulaById(id);
		}
		Aula oaula = aulaservice.getAulaById(id);
		model.addObject("oggettoAula", oaula);
		model.setViewName("Aula/AddEditAula");
		return model;
	}

	@PostMapping(value= "/SaveAula")
	public ModelAndView saveAula(@Valid @ModelAttribute("oggettoAula") Aula oaula, BindingResult bindingresult) {
		if (bindingresult.hasErrors()) {
			ModelAndView model = new ModelAndView();
			model.setViewName("Aula/AddEditAula");
			return model;
		} else {
		aulaservice.saveOrUpdate(oaula);
		return new ModelAndView("redirect:/Aula/ListaAule");
		}
	}

	@GetMapping(value = "/DeleteAula/{id}")
	
	public ModelAndView deleteAula(@PathVariable("id") Integer id) {
		aulaservice.deleteAula(id);
		return new ModelAndView("redirect:/Aula/ListaAule");
	}

}
